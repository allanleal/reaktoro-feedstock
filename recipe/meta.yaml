{% set version = "2.7.1" %}

package:
  name: reaktoro
  version: {{ version }}

source:
  url: https://github.com/reaktoro/reaktoro/archive/v{{ version }}.tar.gz
  sha256: b8b0c2c5049ee5c0701dffda120819e7ece2ecefc2118068da185b88d18d9a46

  #  Use the config below to use a branch to test conda-forge builds without creating GitHub releases.
  # git_url: https://github.com/reaktoro/reaktoro.git
  # git_rev: main

build:
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
    - catch2 =2
    - ccache   # [unix]
    - clcache  # [win]
    - cmake
    - lld      # [unix]
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
  host:
    - autodiff >=1.0.3
    - cpp-tabulate
    - eigen
    - nlohmann_json >=3.9.1
    - numpy
    - optima >=0.3.3
    - phreeqc4rkt
    - pip
    - pybind11
    - pybind11-abi
    - pybind11-stubgen
    - pytest
    - pytest-regressions
    - pytest-xdist
    - python
    - reaktplot >=0.4.1  # [not aarch64 and not ppc64le]
    - tsl_ordered_map
    - setuptools
    - thermofun 0.4.3
    - yaml-cpp4rkt
  run:
    - autodiff >=1.0.3
    - eigen
    - numpy
    - optima >=0.3.3
    - phreeqc4rkt
    - python
    - reaktplot >=0.4.1  # [not aarch64 and not ppc64le]
    - thermofun 0.4.3
    - tsl_ordered_map
    - yaml-cpp4rkt
    - ipykernel                # needed if using Jupyter Notebooks in Visual Studio Code
    - nbformat                 # needed if using plotly in Jupyter Notebooks in Visual Studio Code

test:
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  files:
    - test/
  imports:
    - reaktoro

about:
  home: https://github.com/reaktoro/reaktoro
  license: LGPL-2.1-only
  license_family: LGPL
  license_file: LICENSE
  summary: A unified framework for modeling chemically reactive systems

  description: |
    Reaktoro is a unified framework for modeling chemically reactive systems.
    It provides methods for chemical equilibrium and kinetic calculations
    for multiphase systems. Reaktoro is mainly developed in C++ for
    performance reasons. A Python interface is available for a more
    convenient and simpler use.

  doc_url: https://reaktoro.org
  dev_url: https://github.com/reaktoro/reaktoro

extra:
  recipe-maintainers:
    - allanleal
    - tadeu
    - nicoddemus
    - mtsveta
